(()=>{"use strict";var e={d:(t,n)=>{for(var c in n)e.o(n,c)&&!e.o(t,c)&&Object.defineProperty(t,c,{enumerable:!0,get:n[c]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{kF:()=>c,yz:()=>o,$H:()=>r});const t=e=>{const t=document.getElementById("main__item-warning-container"),n=document.querySelector(".main__item-container-one"),c=document.querySelector(".header__button"),o=document.querySelector(".header__user-info");c.style.display="none",o.style.display="flex",n.style.display="flex",t.style.display="none";const a=document.querySelector(".main__item-container-one");r.then((t=>{t.filter((t=>t.userId===e)).map((e=>({id:e.id,title:e.title,price:e.price,image:e.image,rarity:e.rarity}))).forEach((e=>{const t=`\n                <div class="item__card">\n                    <div class="card__image">\n                        <img src="${e.image}" alt="currier" class="card__picture">\n                    </div>\n                    <div class="card__id">${e.id}</div>\n                    <div class="card__description">\n                        <p class="card__title">${e.title}</p>\n                        <p class="card__rarity">${e.rarity}</p>\n                        <p class="card__price">${e.price+"₽"}</p>\n                        <div class="card__button">\n                        <button class="card__basket">\n                            <img src="./img/basket.png" alt="basket" class="card__basket-picture">\n                        </button>\n                        </div>\n                    </div>\n                </div>\n                `;a.insertAdjacentHTML("beforeend",t)}))})).catch((e=>console.error("Ошибка при загрузке данных о предметах:",e)))},n=e=>{const t=document.querySelector(".user__money");async function n(e,t,n){console.log(n);const c=await fetch(e,{method:t,headers:{"Content-Type":"application/json"},body:JSON.stringify(n)});if(!c.ok){const t=await c.text();throw console.error(`Error in sendRequest for ${e}: ${t}`),new Error(`Error in sendRequest for ${e}`)}return c.json()}function o(e){const t=document.getElementById(e).querySelectorAll(".basket");return Array.from(t).map((e=>e.querySelector(".card__id").textContent))}function a(e){const t=document.getElementById(e).querySelectorAll(".basket");return Array.from(t).map((e=>e.querySelector(".card__price").textContent))}document.getElementById("trade-button").addEventListener("click",(e=>{const i=o("user-cards-container"),s=o("trade-cards-container"),l=a("user-cards-container"),d=a("trade-cards-container"),u=parseFloat(l.pop())-parseFloat(d.pop()),m=localStorage.getItem("userMoney"),_=parseFloat(m)+u;t.innerHTML=_+" ₽",localStorage.setItem("userMoney",_),async function(e,t){if(0!==e.length&&0!==t.length)try{const c=await n("http://localhost:3000/trade","POST",{userSelectedCards:e,targetSelectedCards:t});console.log(c)}catch(e){console.error("Произошла ошибка при выполнении обмена:",e)}else console.error("Выберите карточки для обмена.")}(i,s),(e=>{c.then((t=>{!async function(e,t){var c=t.map((function(e){return parseInt(e,10)}));const o=[];e.forEach((e=>{if(c.find((t=>t===e.id))){const t=n(`http://localhost:3000/items/${e.id}`,"DELETE");o.push(t),e.userId=parseInt(localStorage.getItem("userId"));const c=n("http://localhost:4000/useritem","POST",e);o.push(c),t.then((()=>console.log(`Item with id ${e.id} deleted successfully.`))).catch((t=>console.error(`Error deleting item with id ${e.id}:`,t))),c.then((()=>console.log("Item added to useritems successfully."))).catch((e=>console.error("Error adding item to useritems:",e)))}}));try{await Promise.all(o),console.log("Trade completed successfully!")}catch(e){console.error("Произошла ошибка при выполнении обмена:",e)}}(t,e)})).catch((e=>{console.error("There was a problem with the fetch operation:",e)}))})(s),(e=>{r.then((t=>{!async function(e,t){var c=t.map((function(e){return parseInt(e,10)}));const o=[];e.forEach((e=>{if(c.find((t=>t===e.id))){const t=n(`http://localhost:4000/useritem/${e.id}`,"DELETE");o.push(t),delete e.userId;const c=n("http://localhost:3000/items","POST",e);o.push(c),t.then((()=>console.log(`Item with id ${e.id} deleted successfully.`))).catch((t=>console.error(`Error deleting item with id ${e.id}:`,t))),c.then((()=>console.log("Item added to useritems successfully."))).catch((e=>console.error("Error adding item to useritems:",e)))}}));try{await Promise.all(o),console.log("Trade completed successfully!")}catch(e){console.error("Произошла ошибка при выполнении обмена:",e)}}(t,e)})).catch((e=>{console.error("There was a problem with the fetch operation:",e)}))})(i),setInterval("window.location.reload()",100)}))},c=fetch("http://localhost:3000/items").then((e=>e.json())),o=fetch("http://localhost:3000/users").then((e=>e.json())),r=fetch("http://localhost:4000/useritem").then((e=>e.json()));(()=>{const e=document.querySelector(".main__item-container-two"),t=document.querySelector(".accordion-price-two"),n=document.querySelector(".accordion-price-one");t.innerHTML="0",n.innerHTML="0",c.then((t=>{!function(t){t.forEach((t=>{const n=`\n                <div class="item__card">\n                    <div class="card__image">\n                        <img src="${t.image}" alt="currier" class="card__picture">\n                    </div>\n                    <div class="card__id">${t.id}</div>\n                    <div class="card__description">\n                        <p class="card__title">${t.title}</p>\n                        <p class="card__rarity">${t.rarity}</p>\n                        <p class="card__price">${t.price+"₽"}</p>\n                        <div class="card__button">\n                        <button class="card__basket">\n                            <img src="./img/basket.png" alt="basket" class="card__basket-picture">\n                        </button>\n                        </div>\n                    </div>\n                </div>\n                `;e.insertAdjacentHTML("beforeend",n)}))}(t)})).catch((e=>{console.error("There was a problem with the fetch operation:",e)}))})(),document.addEventListener("DOMContentLoaded",(function(){const e=document.querySelectorAll(".accordion-item"),t=document.querySelector(".main__item-container-one"),n=document.querySelector(".main__item-container-two"),c=document.getElementById("main__item-block-one"),o=document.getElementById("main__item-block-two"),r=document.getElementById("main__item-warning-container");e.forEach((e=>{const a=e.querySelector(".accordion-header"),i=document.querySelector(".accordion-content-one"),s=document.querySelector(".accordion-content-two"),l=e.querySelector(".arrow");a.addEventListener("click",(()=>{i.classList.toggle("active"),s.classList.toggle("active"),l.classList.toggle("active"),"accordion-content-one accordion-content active"===i.classList.value?(c.style.height="500px",o.style.height="500px",r.style.height="450px",t.style.height="410px",n.style.height="410px"):(console.log(o),c.style.height="770px",o.style.height="770px",r.style.height="700px",t.style.height="680px",n.style.height="680px")}))}))})),document.addEventListener("DOMContentLoaded",(function(){const e=document.querySelector(".user__money"),n=localStorage.getItem("userMoney"),c=localStorage.getItem("userAvatar"),o=document.getElementById("avatar");e.innerHTML=n+" ₽",o.src=c;localStorage.getItem("userToken")&&function(e){const n=localStorage.getItem("userId");t(parseInt(n))}()})),(()=>{const e=document.querySelector(".user__money"),c=document.getElementById("avatar"),r=document.getElementById("user-menu"),a=document.querySelector("#user-menu li");function i(){document.getElementById("modal").style.visibility="hidden"}document.getElementById("open-modal-button").addEventListener("click",(function(){document.getElementById("modal").style.visibility="visible"})),document.getElementById("login-form").addEventListener("submit",(function(r){r.preventDefault();const a=document.getElementById("username").value,s=document.getElementById("password").value;o.then((o=>{const r=o.users.find((e=>e.username===a&&e.password===s));if(r){document.getElementById("message").textContent="Авторизация успешна!";const o=r.token,a=r.id;c.src=r.avatar,e.innerHTML=r.money+" ₽",localStorage.setItem("userToken",o),localStorage.setItem("userId",a),localStorage.setItem("userMoney",r.money),localStorage.setItem("userAvatar",r.avatar),i(),t(a),n()}else document.getElementById("message").textContent="Неправильное имя пользователя или пароль."})).catch((e=>{console.error("Произошла ошибка при загрузке файла auth.json:",e)}))})),window.addEventListener("click",(function(e){const t=document.getElementById("modal");e.target===t&&i()})),window.addEventListener("click",(function(e){const t=document.querySelector(".close-button");e.target===t&&i()})),c.addEventListener("click",(function(){r.style.display="block"===r.style.display?"none":"block"})),document.addEventListener("click",(function(e){e.target.closest("#user-container")||(r.style.display="none")})),a.addEventListener("click",(function(){localStorage.clear(),location.reload()}))})(),window.addEventListener("click",(({target:e})=>{if(e.classList.contains("card__basket")){const o=e.closest(".item__card"),r=o.querySelector(".card__id").innerHTML,a=e.closest(".main__item-container"),i=document.querySelector(".accordion-container-content-two"),s=document.querySelector(".accordion-container-content-one");function l(e){e.forEach((e=>{if(e.id===parseInt(r))if(o.closest(".scroll").classList.contains("main__item-container")){if(a.classList.contains("main__item-container-two"))if(o.classList.contains("basket"))o.classList.remove("basket"),i.querySelectorAll(".item__card").forEach((e=>{r===e.querySelector(".card__id").innerHTML&&(t(e),e.remove())}));else{o.classList.add("basket");const t=`\n                                    <div class="item__card basket">\n                                        <div class="card__image">\n                                            <img src="${e.image}" alt="currier" class="card__picture">\n                                        </div>\n                                        <div class="card__id">${e.id}</div>\n                                        <div class="card__description">\n                                            <p class="card__title">${e.title}</p>\n                                            <p class="card__rarity">${e.rarity}</p>\n                                            <p class="card__price">${e.price}</p>\n                                            <div class="card__button">\n                                            <button class="card__basket">\n                                                <img src="./img/basket.png" alt="basket" class="card__basket-picture">\n                                            </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    `;i.insertAdjacentHTML("beforeend",t),function(){const e=document.querySelector(".accordion-container-content-two"),t=document.querySelector(".accordion-price-two");let n=document.querySelector(".accordion-price-two").innerHTML;e.querySelectorAll(".item__card").forEach((e=>{e.querySelectorAll(".card__price").forEach((e=>{let c=parseFloat(n)+parseFloat(e.innerHTML.replaceAll(" ",""));t.innerHTML=`${c.toFixed(2)}`}))}))}(),c()}}else o.closest(".accordion-content").classList.contains("accordion-content-two")&&(document.querySelector(".main__item-container-two").querySelectorAll(".item__card").forEach((e=>{e.classList.contains("basket")&&r===e.querySelector(".card__id").innerHTML&&e.classList.remove("basket")})),t(o),c(),o.remove())}))}function d(e){e.forEach((e=>{if(e.id===parseInt(r))if(o.closest(".scroll").classList.contains("main__item-container")){if(a.classList.contains("main__item-container-one"))if(o.classList.contains("basket"))o.classList.remove("basket"),s.querySelectorAll(".item__card").forEach((e=>{r===e.querySelector(".card__id").innerHTML&&(n(e),e.remove())}));else{o.classList.add("basket");const t=`\n                                    <div class="item__card basket">\n                                        <div class="card__image">\n                                            <img src="${e.image}" alt="currier" class="card__picture">\n                                        </div>\n                                        <div class="card__id">${e.id}</div>\n                                        <div class="card__description">\n                                            <p class="card__title">${e.title}</p>\n                                            <p class="card__rarity">${e.rarity}</p>\n                                            <p class="card__price">${e.price}</p>\n                                            <div class="card__button">\n                                            <button class="card__basket">\n                                                <img src="./img/basket.png" alt="basket" class="card__basket-picture">\n                                            </button>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    `;s.insertAdjacentHTML("beforeend",t),function(){const e=document.querySelector(".accordion-container-content-one"),t=document.querySelector(".accordion-price-one");let n=document.querySelector(".accordion-price-one").innerHTML;e.querySelectorAll(".item__card").forEach((e=>{e.querySelectorAll(".card__price").forEach((e=>{let c=parseFloat(n)+parseFloat(e.innerHTML.replaceAll(" ",""));t.innerHTML=`${c.toFixed(2)}`}))}))}(),c()}}else o.closest(".accordion-content").classList.contains("accordion-content-one")&&(document.querySelector(".main__item-container-one").querySelectorAll(".item__card").forEach((e=>{e.classList.contains("basket")&&r===e.querySelector(".card__id").innerHTML&&e.classList.remove("basket")})),n(o),c(),o.remove())}))}fetch("http://localhost:3000/items").then((e=>{if(!e.ok)throw new Error("Network response was not ok");return e.json()})).then((e=>{l(e)})).catch((e=>{console.error("There was a problem with the fetch operation:",e)})),fetch("http://localhost:4000/useritem").then((e=>{if(!e.ok)throw new Error("Network response was not ok");return e.json()})).then((e=>{d(e)})).catch((e=>{console.error("There was a problem with the fetch operation:",e)}))}function t(e){const t=document.querySelector(".accordion-price-two");let n=document.querySelector(".accordion-price-two").innerHTML,c=parseFloat(n)-parseFloat(e.querySelector(".card__price").innerHTML.replaceAll(" ",""));t.innerHTML=`${c.toFixed(2)}`}function n(e){const t=document.querySelector(".accordion-price-one");let n=document.querySelector(".accordion-price-one").innerHTML,c=parseFloat(n)-parseFloat(e.querySelector(".card__price").innerHTML.replaceAll(" ",""));t.innerHTML=`${c.toFixed(2)}`}function c(){const e=document.getElementById("trade-button"),t=document.querySelector(".accordion-price-one"),n=document.querySelector(".accordion-price-two"),c=document.querySelector(".accordion-content-one"),o=document.querySelector(".accordion-content-two");function r(){const r=parseFloat(t.textContent),a=parseFloat(n.textContent),i=null!==c.querySelector(".item__card"),s=null!==o.querySelector(".item__card"),l=r>=a&&i&&s;e.disabled=!l,l?e.classList.add("activated"):e.classList.remove("activated")}r(),t.addEventListener("input",r),n.addEventListener("input",r)}})),n(),document.querySelectorAll(".item__search-input").forEach((e=>{e.addEventListener("input",(()=>{const t=e.value.toLowerCase(),n=e.classList.contains("item__search-input-one")?"main__item-container-one":"main__item-container-two";document.querySelectorAll(`.${n} .item__card`).forEach((e=>{e.querySelector(".card__title").textContent.toLowerCase().includes(t)?e.style.display="block":e.style.display="none"}))}))})),(()=>{const e=document.getElementById("button-price__one"),t=document.getElementById("button-price__two");function n(e,t){document.querySelectorAll(`.${t} .item__card`).forEach((t=>{const n=t.querySelector(".card__price").textContent;parseFloat(n.replace(/[^\d.]/g,""))<=parseFloat(e)?t.style.display="block":t.style.display="none"}))}e.addEventListener("input",(()=>{n(e.value,"main__item-container-one")})),t.addEventListener("input",(()=>{n(t.value,"main__item-container-two")}))})()})();